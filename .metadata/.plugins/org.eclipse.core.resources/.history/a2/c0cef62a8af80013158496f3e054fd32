package
{
	import flash.display.DisplayObject;
	import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;

	public class ChoosePanel extends Sprite
	{
		//res
		private var mclMust:Array = [];
		private var mclMaybe:Array = [];
		
		//data
		private var step:StepInfo;
		
		public function ChoosePanel( step:StepInfo )
		{
			this.step = step;
			this.addEventListener(Event.ADDED_TO_STAGE, onATS );
		}
		
		protected function onATS(event:Event):void
		{
			this.addEventListener(Event.ADDED_TO_STAGE, onATS );
			
			parseRes();
		}
		
		private function parseRes():void{
			for( var i:int = 0; i < 9; i++ ){
				mclMust[i] = this.getChildByName("must" + i ) as MovieClip;
				mclMaybe[i] = this.getChildByName("maybe" + i ) as MovieClip;
				
				MovieClip(mclMaybe[i]).buttonMode = true;
				MovieClip(mclMust[i]).buttonMode = true;
				
				MovieClip(mclMaybe[i]).addEventListener(MouseEvent.CLICK, onClickMaybe );
				MovieClip(mclMust[i]).addEventListener(MouseEvent.CLICK, onClickMust );
			}
			
		}
		
		private function addEve( mcName:String, onClickFunc:Function = null ):void{
			var target:DisplayObject = this.getChildByName( mcName );
			if( onClickFunc != null )
				target.addEventListener(MouseEvent.CLICK, onClickFunc );
		}
		
		protected function onClickMaybe(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		protected function onClickMust(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		private function dispose():void{
			if( this.parent != null ){
				this.parent.removeChild( this );
			}
		}
	}
}