package
{
	import flash.display.DisplayObject;
	import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.MouseEvent;
	import flash.text.TextField;

	public class ChoosePanel extends Sprite
	{
		//res
		private var mclMust:Array = [];
		private var mclMaybe:Array = [];
		
		//data
		private var step:StepInfo;
		
		private var callBack:Function;
		
		
		public function ChoosePanel( step:StepInfo, callBack:Function = null )
		{
			this.step = step.copy();
			this.callBack = callBack;
			this.addEventListener(Event.ADDED_TO_STAGE, onATS );
		}
		
		protected function onATS(event:Event):void
		{
			this.addEventListener(Event.ADDED_TO_STAGE, onATS );
			
			parseRes();
		}
		
		private function parseRes():void{
			for( var i:int = 0; i < 9; i++ ){
				mclMust[i] = this.getChildByName("must" + i ) as MovieClip;
				mclMaybe[i] = this.getChildByName("maybe" + i ) as MovieClip;
				
				(MovieClip(mclMaybe[i]).getChildByName("_txtNum") as TextField ).text = "" + ( i + 1);
				(MovieClip(mclMust[i]).getChildByName("_txtNum") as TextField ).text = "" + ( i + 1);
				
				MovieClip(mclMaybe[i]).buttonMode = true;
				MovieClip(mclMust[i]).buttonMode = true;
				
				MovieClip(mclMaybe[i]).addEventListener(MouseEvent.CLICK, onClickMaybe );
				MovieClip(mclMust[i]).addEventListener(MouseEvent.CLICK, onClickMust );
				
			}
			
			addEve( "delMust", onClickDelMust );
			addEve( "delMaybe", onClickDelMaybe );
			
			addEve( "btnOK", onClickOk );
			addEve( "btnCancel", onClickCancel );
		}
		
		private function setData():void
		{
			var item:MovieClip;
			for( var i:int = 0; i < 9; i++ ){
				item = mclMust[i];
				if( step.must == (i+1) ){
					(item.getChildByName("_mcBg") as MovieClip).gotoAndStop( 1 );
				}
				else
				{
					(item.getChildByName("_mcBg") as MovieClip).gotoAndStop( 2 );
				}
			}
		}
		
		private function checkHasThisNum( num:int, items:Array ):void{
			var item:MovieClip;
			for( var i:int = 0; i < 9; i++ ){
				item = items[i];
				if( step.must == (i+1) ){
					(item.getChildByName("_mcBg") as MovieClip).gotoAndStop( 1 );
				}
				else
				{
					(item.getChildByName("_mcBg") as MovieClip).gotoAndStop( 2 );
				}
			}
		}
		
		private function onClickDelMust(event:MouseEvent):void
		{
			step.must = 0;
		}
		
		private function onClickDelMaybe(event:MouseEvent):void
		{
			step.maybe = [];
		}
		
		private function onClickOk(event:MouseEvent):void
		{
			dispose();
			
			if( callBack != null ){
				callBack( this.step );
			}
		}
		
		private function onClickCancel(event:MouseEvent):void
		{
			dispose();
		}
		
		private function addEve( mcName:String, onClickFunc:Function = null ):void{
			var target:DisplayObject = this.getChildByName( mcName );
			if( onClickFunc != null )
				target.addEventListener(MouseEvent.CLICK, onClickFunc );
		}
		
		protected function onClickMaybe(event:MouseEvent):void
		{
			// TODO Auto-generated method stub
			
		}
		
		protected function onClickMust(event:MouseEvent):void
		{
			
		}
		
		private function dispose():void{
			if( this.parent != null ){
				this.parent.removeChild( this );
			}
		}
	}
}